version: "3.7"

services:
  app:
    container_name: app-dev
    build:
      context: .
      dockerfile: ./Dockerfile
    restart: unless-stopped
    ports:
      - "8080:8080"
      - "8000:8000"
    environment:
      BOT_TOKEN: ${BOT_TOKEN}
      PUBLISH_CHANNEL: ${PUBLISH_CHANNEL}
      POSTGRES_URI: ${POSTGRES_URI:-postgres://service:service@postgres:5432/service?sslmode=disable}
      WEB_PATH: /app/static
    volumes:
      - ./web/build:/app/static
    depends_on:
      - postgres

  publisher:
    container_name: publisher-dev
    build:
      context: .
      dockerfile: ./Dockerfile
    command: ./bot
    restart: unless-stopped
    environment:
      BOT_TOKEN: ${BOT_TOKEN}
      PUBLISH_CHANNEL: ${PUBLISH_CHANNEL}
    depends_on:
      - app

  ml-functions:
    container_name: ml-functions
    image: ${ML_FUNCTIONS_IMAGE:-nikolayzmitrovich/live-db-update:latest}
    restart: unless-stopped
    environment:
      POSTGRES_URI: ${POSTGRES_URI:-postgres://service:service@postgres:5432/service?sslmode=disable}
    depends_on:
      - postgres

  postgres:
    container_name: postgres-dev
    image: postgres:14
    restart: unless-stopped
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-service}
      POSTGRES_USER: ${POSTGRES_USER:-service}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-service}
      PGDATA: /data/postgres
    volumes:
      - ./postgres:/data/postgres